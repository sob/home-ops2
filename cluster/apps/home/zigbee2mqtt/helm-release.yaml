---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: zigbee2mqtt
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: zigbee2mqtt
      version: 9.4.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
  dependsOn:
    - name: mosquitto
      namespace: home
  values:
    image:
      repository: ghcr.io/koenkk/zigbee2mqtt
      tag: 1.26.0
    env:
      TZ: "${TIMEZONE}"
      ZIGBEE2MQTT_DATA: /data
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: &host "zigbee.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: *host
    persistence:
      config:
        enabled: true
        existingClaim: zigbee2mqtt-config-v1
        mountPath: "/data"
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 500Mi
    # These config values are not what is my current state of zigbee2mqtt
    # It's merely a guide for the initial start up on a fresh install
    # Everything after the first start is managed in the UI
    config:
      homeassistant: true
      device_options:
        retain: true
      permit_join: false
      mqtt:
        base_topic: zigbee2mqtt
        server: "mqtt://mosquitto"
        user: "${SECRET_MQTT_USERNAME}"
        password: "${SECRET_MQTT_PASSWORD}"
      serial:
        port: "tcp://${SECRET_ZIGBEE_ROUTER}:6638"
      advanced:
        log_output:
          - console
        network_key: GENERATE
        pan_id: GENERATE
      frontend:
        port: 8080
